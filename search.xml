<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[laravel5.3 后台登陆验证]]></title>
      <url>http://blog.ijilu.wang/pages/2016/11/19/laravel5-3-admin-auth/</url>
      <content type="html"><![CDATA[<h4 id="登录auth与用户填充"><a href="#登录auth与用户填充" class="headerlink" title="登录auth与用户填充"></a>登录auth与用户填充</h4><p>修改user表满足系统基本需求<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// create_users_table.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        Schema::create(<span class="string">'users'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</div><div class="line">            $table-&gt;increments(<span class="string">'id'</span>);</div><div class="line">            $table-&gt;string(<span class="string">'name'</span>);</div><div class="line">            $table-&gt;string(<span class="string">'username'</span>)-&gt;unique();</div><div class="line">            $table-&gt;unsignedInteger(<span class="string">'score'</span>)-&gt;default(<span class="number">0</span>)-&gt;comment(<span class="string">'论坛积分'</span>);</div><div class="line">            $table-&gt;string(<span class="string">'email'</span>)-&gt;unique();</div><div class="line">            $table-&gt;string(<span class="string">'password'</span>);</div><div class="line">            $table-&gt;unsignedTinyInteger(<span class="string">'status'</span>)-&gt;default(<span class="number">1</span>)-&gt;comment(<span class="string">'0冻结1普通用户2权限用户'</span>);</div><div class="line">            $table-&gt;rememberToken();</div><div class="line">            $table-&gt;timestamps();</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"><span class="comment">// ModelFactory.php</span></div><div class="line">$factory-&gt;define(App\Models\User::class, <span class="function"><span class="keyword">function</span> <span class="params">(Faker\Generator $faker)</span> </span>&#123;</div><div class="line">    <span class="keyword">static</span> $password;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> [</div><div class="line">        <span class="string">'name'</span> =&gt; $faker-&gt;name,</div><div class="line">        <span class="string">'username'</span> =&gt; $faker-&gt;unique()-&gt;username,</div><div class="line">        <span class="string">'email'</span> =&gt; $faker-&gt;unique()-&gt;safeEmail,</div><div class="line">        <span class="string">'password'</span> =&gt; $password ?: $password = bcrypt(<span class="string">'secret'</span>),</div><div class="line">        <span class="string">'remember_token'</span> =&gt; str_random(<span class="number">10</span>),</div><div class="line">    ];</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>添加填充基础数据Seeder<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php artisan make:seeder UsersTableSeeder</div></pre></td></tr></table></figure></p>
<p>修改初始数据的文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// UsersTableSeeder.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        $admin = factory(<span class="string">'App\Models\User'</span>)-&gt;create([</div><div class="line">            <span class="string">'name'</span> =&gt; <span class="string">'Art Coder'</span>,</div><div class="line">            <span class="string">'username'</span> =&gt; <span class="string">'admin'</span>,</div><div class="line">            <span class="string">'email'</span> =&gt; <span class="string">'admin@ijilu.wang'</span>,</div><div class="line">            <span class="string">'password'</span> =&gt; bcrypt(<span class="string">'123456'</span>),</div><div class="line">            <span class="string">'status'</span> =&gt; <span class="number">2</span>,</div><div class="line">        ]);</div><div class="line"></div><div class="line">        $editor = factory(<span class="string">'App\Models\User'</span>)-&gt;create([</div><div class="line">            <span class="string">'name'</span> =&gt; <span class="string">'Evan Duan'</span>,</div><div class="line">            <span class="string">'username'</span> =&gt; <span class="string">'editor'</span>,</div><div class="line">            <span class="string">'email'</span> =&gt; <span class="string">'editor@ijilu.wang'</span>,</div><div class="line">            <span class="string">'password'</span> =&gt; bcrypt(<span class="string">'123456'</span>),</div><div class="line">            <span class="string">'status'</span> =&gt; <span class="number">2</span>,</div><div class="line">        ]);</div><div class="line"></div><div class="line">        $users = factory(<span class="string">'App\Models\User'</span>, <span class="number">8</span>)-&gt;create([</div><div class="line">            <span class="string">'password'</span> =&gt; bcrypt(<span class="string">'123456'</span>),</div><div class="line">        ]);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"><span class="comment">// DatabaseSeeder.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;call(UsersTableSeeder::class);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>修改好.env的数据库配置，执行下面代码，生产数据表和基本测试数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ php artisan make:auth</div><div class="line">$ php artisan migrate --seed</div><div class="line"># or php artisan migrate &amp;&amp; php artisan db:seed --class=UsersTableSeeder</div></pre></td></tr></table></figure></p>
<p>执行命令后，可以查看到数据库中生产了2张表(migrations为记录已经migrate的表)，并且users表中已经有了10条数据，可以打开localhost/login输入已经生产的用户登录(admin@ijilu.wang/123456)<br>修改Users module放入modules中注册的错误<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// RegisterController.php</span></div><div class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">User</span>;</div><div class="line"></div><div class="line"><span class="comment">// RegisterController.php</span></div><div class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">validator</span><span class="params">(array $data)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> Validator::make($data, [</div><div class="line">            ...</div><div class="line">            <span class="string">'username'</span> =&gt; <span class="string">'required|max:255'</span>,</div><div class="line">            ...</div><div class="line">        ]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">(array $data)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> User::create([</div><div class="line">            ...</div><div class="line">            <span class="string">'username'</span> =&gt; $data[<span class="string">'username'</span>],</div><div class="line">            ...</div><div class="line">        ]);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h4 id="修改登录字段"><a href="#修改登录字段" class="headerlink" title="修改登录字段"></a>修改登录字段</h4><p>登录字段使用配置，这样可以在<code>.env</code>文件中修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ touch config/globals.php</div></pre></td></tr></table></figure></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// config/globals.php</span></div><div class="line"><span class="keyword">return</span> [</div><div class="line">    <span class="string">'login_field'</span> =&gt; env(<span class="string">'LOGIN_FIELD'</span>, <span class="string">'username'</span>),</div><div class="line">    <span class="string">'login_field_tips'</span> =&gt; env(<span class="string">'LOGIN_FIELD_TIPS'</span>, <span class="string">'UserName'</span>),</div><div class="line">];</div><div class="line"></div><div class="line"><span class="comment">// loginController.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">username</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> config(<span class="string">'globals.login_field'</span>);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>这样可以在<code>.env</code>中添加如下配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">LOGIN_FIELD=email</div><div class="line">LOGIN_FIELD_TIPS=&apos;E-Mail Address&apos;</div></pre></td></tr></table></figure></p>
<p>然后修改模板文件提示以及字段，就可以很好的切换登录字段</p>
<h4 id="后台登陆"><a href="#后台登陆" class="headerlink" title="后台登陆"></a>后台登陆</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ php artisan make:controller Admin/IndexController</div><div class="line">$ php artisan make:middleware AdminAuthMiddleware</div></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Admin/IndexController.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> view(<span class="string">'admin.index.index'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="comment">// AdminAuthMiddleware.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">($request, Closure $next)</span></span></div><div class="line">    &#123;</div><div class="line">        $is_ajax = $request-&gt;ajax() || $request-&gt;wantsJson();</div><div class="line">        $ajax_view = response(<span class="string">'Unauthorized.'</span>, <span class="number">401</span>);</div><div class="line">        <span class="keyword">if</span> (Auth::guard()-&gt;guest()) &#123;</div><div class="line">            <span class="keyword">if</span> ($is_ajax) &#123;</div><div class="line">                <span class="keyword">return</span> $ajax_view;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> redirect()-&gt;guest(<span class="string">'/'</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(auth()-&gt;user()-&gt;status &lt;=<span class="number">1</span>)&#123;</div><div class="line">            <span class="keyword">if</span> ($is_ajax) &#123;</div><div class="line">                <span class="keyword">return</span> $ajax_view;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Response(view(<span class="string">'auth.unauthorized'</span>));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> $next($request);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="comment">// Kernel.php</span></div><div class="line">    <span class="keyword">protected</span> $routeMiddleware = [</div><div class="line">        ...</div><div class="line">        <span class="string">'auth.admin'</span> =&gt; \App\Http\Middleware\AdminAuthMiddleware::class,</div><div class="line">    ];</div><div class="line"></div><div class="line"><span class="comment">// routes/web.php</span></div><div class="line">Route::group([<span class="string">'prefix'</span> =&gt; <span class="string">'admin'</span>, <span class="string">'namespace'</span> =&gt; <span class="string">'Admin'</span>, <span class="string">'middleware'</span> =&gt; <span class="string">'auth.admin'</span>], <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</div><div class="line">    Route::get(<span class="string">'index'</span>, <span class="string">'IndexController@index'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>测试：使用一个status为1的用户登录，后台(localhost/admin/index)会提示没有权限，使用admin登录时可以看到后台首页的</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[laravel5.3 discuz step by step]]></title>
      <url>http://blog.ijilu.wang/pages/2016/10/31/laravel5-3-discuz-step-by-step/</url>
      <content type="html"><![CDATA[<p>本文主要一步一步制作一个discuz的教程</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p><a href="/pages/2016/10/17/laravel5-3-install-usage/">安装与注意事项</a></p>
<h4 id="用户与权限"><a href="#用户与权限" class="headerlink" title="用户与权限"></a>用户与权限</h4><p><a href="/pages/2016/11/19/laravel5-3-admin-auth/">后台登陆</a></p>
<h4 id="主题与回复"><a href="#主题与回复" class="headerlink" title="主题与回复"></a>主题与回复</h4><h4 id="个人中心"><a href="#个人中心" class="headerlink" title="个人中心"></a>个人中心</h4><h4 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h4><p><a href="http://laravelacademy.org/post/187.html" target="_blank" rel="external">Elixir</a><br><a href="http://laravelacademy.org/post/5925.html" target="_blank" rel="external">Laravel 5.3 多用户表登录实现</a><br><a href="http://9iphp.com/web/laravel/laravel-5-acl-define.html" target="_blank" rel="external">控制系统 ACL</a><br><a href="https://segmentfault.com/q/1010000006886544" target="_blank" rel="external">如何兼容两套ACL权限管理？</a><br><a href="http://blog.csdn.net/diannet/article/details/47616167" target="_blank" rel="external">phpstorm开发laravel</a><br><a href="https://laravel-china.org/topics/1635" target="_blank" rel="external">我对 Laravel 权限管理的纠结</a><br><a href="https://github.com/Vr80s/laravel-rbac" target="_blank" rel="external">laravel-rbac</a><br><a href="https://github.com/YaroslavMolchan/rbac" target="_blank" rel="external">laravel5.3 rbac</a><br><a href="http://laravelacademy.org/post/153.html" target="_blank" rel="external">Laravel 精选资源大全</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[laravel5.3 Admin权限控制系统 ACL]]></title>
      <url>http://blog.ijilu.wang/pages/2016/10/18/laravel-5-3-acl/</url>
      <content type="html"><![CDATA[<p>Laravel自带Authorization，可以让用户自定义权限，分享一种定义权限系统的方法。<br>这个主要是作用于后台的权限系统，不是表users而是表admins，独立于前台的权限系统</p>
<h4 id="1-创建角色与权限表"><a href="#1-创建角色与权限表" class="headerlink" title="1. 创建角色与权限表"></a>1. 创建角色与权限表</h4><p>使用命令行创建角色与权限表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan make:migration create_permissions_and_roles --create=permissions</div></pre></td></tr></table></figure></p>
<p>打开刚刚创建的文件，填入下面的代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    Schema::create(<span class="string">'roles'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</div><div class="line">        $table-&gt;increments(<span class="string">'id'</span>);</div><div class="line">        $table-&gt;string(<span class="string">'name'</span>);</div><div class="line">        $table-&gt;string(<span class="string">'label'</span>);</div><div class="line">        $table-&gt;string(<span class="string">'description'</span>)-&gt;nullable();</div><div class="line">        $table-&gt;timestamps();</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    Schema::create(<span class="string">'permissions'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</div><div class="line">        $table-&gt;increments(<span class="string">'id'</span>);</div><div class="line">        $table-&gt;string(<span class="string">'name'</span>);</div><div class="line">        $table-&gt;string(<span class="string">'label'</span>);</div><div class="line">        $table-&gt;string(<span class="string">'description'</span>)-&gt;nullable();</div><div class="line">        $table-&gt;timestamps();</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    Schema::create(<span class="string">'permission_role'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</div><div class="line">        $table-&gt;integer(<span class="string">'permission_id'</span>)-&gt;unsigned();</div><div class="line">        $table-&gt;integer(<span class="string">'role_id'</span>)-&gt;unsigned();</div><div class="line"></div><div class="line">        $table-&gt;foreign(<span class="string">'permission_id'</span>)</div><div class="line">            -&gt;references(<span class="string">'id'</span>)</div><div class="line">            -&gt;on(<span class="string">'permissions'</span>)</div><div class="line">            -&gt;onDelete(<span class="string">'cascade'</span>);</div><div class="line"></div><div class="line">        $table-&gt;foreign(<span class="string">'role_id'</span>)</div><div class="line">            -&gt;references(<span class="string">'id'</span>)</div><div class="line">            -&gt;on(<span class="string">'roles'</span>)</div><div class="line">            -&gt;onDelete(<span class="string">'cascade'</span>);</div><div class="line"></div><div class="line">        $table-&gt;primary([<span class="string">'permission_id'</span>, <span class="string">'role_id'</span>]);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    Schema::create(<span class="string">'admin_roles'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(Blueprint $table)</span> </span>&#123;</div><div class="line">        $table-&gt;integer(<span class="string">'admin_id'</span>)-&gt;unsigned();</div><div class="line">        $table-&gt;integer(<span class="string">'role_id'</span>)-&gt;unsigned();</div><div class="line"></div><div class="line">        $table-&gt;foreign(<span class="string">'role_id'</span>)</div><div class="line">            -&gt;references(<span class="string">'id'</span>)</div><div class="line">            -&gt;on(<span class="string">'roles'</span>)</div><div class="line">            -&gt;onDelete(<span class="string">'cascade'</span>);</div><div class="line"></div><div class="line">        $table-&gt;foreign(<span class="string">'admin_id'</span>)</div><div class="line">            -&gt;references(<span class="string">'id'</span>)</div><div class="line">            -&gt;on(<span class="string">'admins'</span>)</div><div class="line">            -&gt;onDelete(<span class="string">'cascade'</span>);</div><div class="line"></div><div class="line">        $table-&gt;primary([<span class="string">'role_id'</span>, <span class="string">'admin_id'</span>]);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Reverse the migrations.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span> void</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// 由于使用了外键，所以需要加上DB这两句，不然就不能使用migrate:reset/migrate:rollback</span></div><div class="line">    DB::statement(<span class="string">'SET FOREIGN_KEY_CHECKS = 0'</span>);</div><div class="line">    Schema::dropIfExists(<span class="string">'roles'</span>);</div><div class="line">    Schema::dropIfExists(<span class="string">'permissions'</span>);</div><div class="line">    Schema::dropIfExists(<span class="string">'permission_role'</span>);</div><div class="line">    Schema::dropIfExists(<span class="string">'role_user'</span>);</div><div class="line">    DB::statement(<span class="string">'SET FOREIGN_KEY_CHECKS = 1'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>上面的代码会创建角色表、权限表、角色与权限的中间表以及角色与用户的中间表。<br>执行命令创建表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan migrate</div></pre></td></tr></table></figure></p>
<h4 id="2-创建模型"><a href="#2-创建模型" class="headerlink" title="2. 创建模型"></a>2. 创建模型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">php artisan make:model Models/Permission</div><div class="line">php artisan make:model Models/Role</div></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Permission.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">roles</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsToMany(Role::class);</div><div class="line">    &#125;</div><div class="line"><span class="comment">// Role.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">permissions</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsToMany(Permission::class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//给角色添加权限</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">givePermissionTo</span><span class="params">($permission)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;permissions()-&gt;save($permission);</div><div class="line">    &#125;</div><div class="line"><span class="comment">// Admin.php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">roles</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsToMany(Role::class, <span class="string">'admin_roles'</span>, <span class="string">'admin_id'</span>, <span class="string">'role_id'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 判断用户是否具有某个角色</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasRole</span><span class="params">($role)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (is_string($role)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;roles-&gt;contains(<span class="string">'name'</span>, $role);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> !!$role-&gt;intersect(<span class="keyword">$this</span>-&gt;roles)-&gt;count();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 判断用户是否具有某权限</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasPermission</span><span class="params">($permission)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasRole($permission-&gt;roles);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 给用户分配角色</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">assignRole</span><span class="params">($role)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;roles()-&gt;save(</div><div class="line">            Role::whereName($role)-&gt;firstOrFail()</div><div class="line">        );</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>上面的代码实现了给角色分配权限及给用户分配角色，然后还提供了判断用户是否具有某角色及某权限的方法。<br>之后就给使用Laravel提供的Authorization来定义权限控制了，打开 /app/Providers/AuthServiceProvider.php 文件，在 boot() 中添加代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">$this</span>-&gt;registerPolicies();</div><div class="line"></div><div class="line">    $permissions = \App\Models\Permission::with(<span class="string">'roles'</span>)-&gt;get();</div><div class="line">    <span class="keyword">foreach</span> ($permissions <span class="keyword">as</span> $permission) &#123;</div><div class="line">        Gate::define($permission-&gt;name, <span class="function"><span class="keyword">function</span><span class="params">($user)</span> <span class="title">use</span> <span class="params">($permission)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> $user-&gt;hasPermission($permission);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>通过上面的方法就定义好了各个权限。下面就该填充数据了。</p>
<h4 id="3-填充数据"><a href="#3-填充数据" class="headerlink" title="3. 填充数据"></a>3. 填充数据</h4><p>为方便起见，这里使用 tinker 命令行工具来添加几条测试数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php artisan tinker</div></pre></td></tr></table></figure></p>
<p>之后进入命令行，依次输入下列命令：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">// 改变命名空间位置，避免下面每次都要输入 App\Models</div><div class="line">namespace App\Models</div><div class="line"> </div><div class="line">// 创建权限</div><div class="line">$permission_edit = new Permission</div><div class="line">$permission_edit-&gt;name = 'edit-post'</div><div class="line">$permission_edit-&gt;label = 'Can edit post'</div><div class="line">$permission_edit-&gt;save()</div><div class="line"></div><div class="line">$permission_delete = new Permission</div><div class="line">$permission_delete-&gt;name = 'delete-post'</div><div class="line">$permission_delete-&gt;label = 'Can delete post'</div><div class="line">$permission_delete-&gt;save()</div><div class="line"></div><div class="line">// 创建角色</div><div class="line">$role_editor = new Role</div><div class="line">$role_editor-&gt;name = 'editor'</div><div class="line">$role_editor-&gt;label = 'The editor of the site'</div><div class="line">$role_editor-&gt;save()</div><div class="line">$role_editor-&gt;givePermissionTo($permission_edit) // 给角色分配权限</div><div class="line"></div><div class="line">$role_admin = new Role</div><div class="line">$role_admin-&gt;name = 'admin'</div><div class="line">$role_admin-&gt;label = 'The admin of the site'</div><div class="line">$role_admin-&gt;save()</div><div class="line">$role_admin-&gt;givePermissionTo($permission_edit) // 给角色分配权限</div><div class="line">$role_admin-&gt;givePermissionTo($permission_delete) // 给角色分配权限</div><div class="line"></div><div class="line">$editor = factory(Admin::class)-&gt;create() // 创建用户</div><div class="line">$editor-&gt;assignRole($role_editor-&gt;name) // 给用户分配角色</div><div class="line"></div><div class="line">$admin = factory(Admin::class)-&gt;create()</div><div class="line">$admin-&gt;assignRole($role_admin-&gt;name)</div></pre></td></tr></table></figure></p>
<p>上面我们创建了两个权限：edit-post 和 delete-post，然后创建了 editor 和 admin 两个角色，editor 角色拥有 edit-post 的权限，而 admin 两个权限都有。之后生成了两个用户，分别给他们分配了 editor 和 admin 的角色，即：ID 1 用户拥有 editor 角色，因此只有 edit-post 权限，而 ID 2 用户拥有 admin 角色，因此具有 edit-post 和 delete-post 权限。下面我们来验证下是否正确。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// routes/web.php</div><div class="line">Route::get(&apos;/&apos;, function () &#123;</div><div class="line">    $user = Auth::guard(&apos;admin&apos;)-&gt;loginUsingId(1);</div><div class="line">    return view(&apos;welcome&apos;);</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>上面我们先验证 ID 1 用户的权限，然后修改 /resources/views/welcome.blade.php 文件：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;Laravel&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;h1&gt;权限测试&lt;/h1&gt;</div><div class="line">        &lt;p&gt;</div><div class="line">        @can(<span class="string">'edit-post'</span>)</div><div class="line">            &lt;a href=<span class="string">"#"</span>&gt;Edit Post&lt;/a&gt;</div><div class="line">        @endcan</div><div class="line">        &lt;/p&gt;</div><div class="line">        &lt;p&gt;</div><div class="line">        @can(<span class="string">'delete-post'</span>)</div><div class="line">            &lt;a href=<span class="string">"#"</span>&gt;Delete Post&lt;/a&gt;</div><div class="line">        @endcan</div><div class="line">        &lt;/p&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>在视图中我们通过 Laravel 提供的 @can 方法来判断用户是否具有某权限。</p>
<p>打开浏览器，访问上面定义的路由，可以看到视图中只出现了 Edit Post 链接。之后我们修改路由中用户ID为 2 ，然后再次刷新浏览器，可以看到，这次同时出现了 Edit Post 和 Delete Post 两个链接，说明我们定义的权限控制起作用了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[laravel5.3安装与注意事项]]></title>
      <url>http://blog.ijilu.wang/pages/2016/10/17/laravel5-3-install-usage/</url>
      <content type="html"><![CDATA[<p>本文主要讲解<a href="https://laravel.com/" target="_blank" rel="external">laravel5.3</a>的安装与注意事项，详细用法请参考<a href="https://laravel.com/docs/5.3" target="_blank" rel="external">官网文档</a>或<a href="http://laravelacademy.org/laravel-docs-5_3" target="_blank" rel="external">中文文档</a>。</p>
<h4 id="安装laravel"><a href="#安装laravel" class="headerlink" title="安装laravel"></a>安装laravel</h4><p>首先安装composer<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ mkdir D:\bin</div><div class="line">$ cd D:\bin</div><div class="line">$ php -r &quot;readfile(&apos;http://install.phpcomposer.com/installer&apos;);&quot; | php</div><div class="line">$ echo @php &quot;%~dp0composer.phar&quot; %*&gt;composer.bat</div><div class="line"># 然后把D:\bin路径加入PATH环境变量即可</div></pre></td></tr></table></figure></p>
<p>更新composer为中国源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ composer config -g repo.packagist composer https://packagist.phpcomposer.com</div><div class="line"># 查看composer配置命令</div><div class="line">$ composer config -g -l</div></pre></td></tr></table></figure></p>
<p>使用composer安装laravel<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ composer create-project laravel/laravel --prefer-dist proj_name</div></pre></td></tr></table></figure></p>
<p>安装中最容易出现的问题<br><code>[Symfony\Component\Process\Exception\RuntimeException]</code><br><code>The Process class relies on proc_open, which is not available on your PHP installation.</code><br>出现这个的原因是php禁用了proc_open，需要开启这些函数<br><code>proc_open,proc_close,proc_nice,proc_terminate,leak,proc_get_status,putenv</code></p>
<h4 id="安装debugbar"><a href="#安装debugbar" class="headerlink" title="安装debugbar"></a>安装debugbar</h4><p><a href="https://github.com/barryvdh/laravel-debugbar" target="_blank" rel="external">debugbar</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ composer require barryvdh/laravel-debugbar</div></pre></td></tr></table></figure></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// config/app.php</span></div><div class="line"></div><div class="line"><span class="string">'providers'</span> =&gt; [</div><div class="line">    ...</div><div class="line">    Barryvdh\Debugbar\ServiceProvider::class,</div><div class="line">    ...</div><div class="line">],</div><div class="line"><span class="string">'aliases'</span> =&gt; [</div><div class="line">    ...</div><div class="line">    <span class="string">'Debugbar'</span> =&gt; Barryvdh\Debugbar\Facade::class,</div><div class="line">    ...</div><div class="line">],</div></pre></td></tr></table></figure>
<h4 id="把Module都放入到Modules文件夹下"><a href="#把Module都放入到Modules文件夹下" class="headerlink" title="把Module都放入到Modules文件夹下"></a>把Module都放入到Modules文件夹下</h4><h5 id="1-复制User-php到Models下"><a href="#1-复制User-php到Models下" class="headerlink" title="1. 复制User.php到Models下"></a>1. 复制User.php到Models下</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir app/Models</div><div class="line">$ mv app/User.php app/Models/User.php</div></pre></td></tr></table></figure>
<h5 id="2-修改命名空间"><a href="#2-修改命名空间" class="headerlink" title="2. 修改命名空间"></a>2. 修改命名空间</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// app/Models/User.php</span></div><div class="line"><span class="comment">// namespace App;  =&gt; </span></div><div class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</div><div class="line"></div><div class="line"><span class="comment">// config/auth.php</span></div><div class="line"><span class="string">'providers'</span> =&gt; [</div><div class="line">        <span class="string">'users'</span> =&gt; [</div><div class="line">            <span class="string">'driver'</span> =&gt; <span class="string">'eloquent'</span>,</div><div class="line">            <span class="comment">// App\User::class, =&gt; </span></div><div class="line">            <span class="string">'model'</span> =&gt; App\Models\User::class,</div><div class="line">        ],</div><div class="line">    ],</div></pre></td></tr></table></figure>
<h4 id="添加自定义函数文件"><a href="#添加自定义函数文件" class="headerlink" title="添加自定义函数文件"></a>添加自定义函数文件</h4><h5 id="1-创建文件-app-helpers-php"><a href="#1-创建文件-app-helpers-php" class="headerlink" title="1. 创建文件 app/helpers.php"></a>1. 创建文件 app/helpers.php</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ touch app/helpers.php</div></pre></td></tr></table></figure>
<h5 id="2-修改项目-composer-json"><a href="#2-修改项目-composer-json" class="headerlink" title="2. 修改项目 composer.json"></a>2. 修改项目 composer.json</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    ...</div><div class="line"></div><div class="line">    <span class="string">"autoload"</span>: &#123;</div><div class="line">        <span class="string">"files"</span>: [</div><div class="line">            <span class="string">"app/helpers.php"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="3-运行命令"><a href="#3-运行命令" class="headerlink" title="3. 运行命令"></a>3. 运行命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ composer dump-autoload</div></pre></td></tr></table></figure>
<h4 id="选择安装其他扩展"><a href="#选择安装其他扩展" class="headerlink" title="选择安装其他扩展"></a>选择安装其他扩展</h4><p>主要是前端架构之类的，如果只是php，可不安装</p>
<h5 id="1-npm"><a href="#1-npm" class="headerlink" title="1.npm"></a>1.npm</h5><p>安装<a href="https://nodejs.org" target="_blank" rel="external">nodejs</a><br>修改npm源为淘宝源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm config set registry https://registry.npm.taobao.org </div><div class="line">$ npm info underscore</div></pre></td></tr></table></figure></p>
<p>安装gulp自动化构建工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 需要先全局安装gulp，全局安装的模块都是cmd命令</div><div class="line">$ npm install --global gulp</div><div class="line"># 安装相关模块</div><div class="line"># npm install</div></pre></td></tr></table></figure></p>
<h5 id="2-sass"><a href="#2-sass" class="headerlink" title="2.sass"></a>2.sass</h5><p>安装<a href="http://rubyinstaller.org/download.html" target="_blank" rel="external">ruby</a><br>修改gem镜像为Ruby China<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/</div><div class="line">$ gem sources -l</div><div class="line">https://gems.ruby-china.org</div><div class="line"># 确保只有 gems.ruby-china.org</div><div class="line"># 如果出现ssl错误，https://gems.ruby-china.org/改为http://gems.ruby-china.org/</div></pre></td></tr></table></figure></p>
<p>安装sass<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ gem install sass</div></pre></td></tr></table></figure></p>
<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">php artisan key:generate</div><div class="line">php artisan migrate</div><div class="line">php artisan migrate:refresh --seed</div><div class="line">php artisan migrate:rollback</div><div class="line">php artisan db:seed</div><div class="line">php artisan make:controller [Admin/]IndexController</div><div class="line">php artisan make:model --migration [Model/]Post   // 创建数据表和模型</div><div class="line">php artisan make:migration create_articles_table --create=articles // 创建数据表</div><div class="line">    Available Column Types https://laravel.com/docs/5.3/migrations#creating-tables</div><div class="line">php artisan make:migration add_note_to_admin --table=admin // 向admin表中添加note字段</div><div class="line">php artisan make:seeder UsersTableSeeder</div><div class="line">php artisan list</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[node备忘录]]></title>
      <url>http://blog.ijilu.wang/pages/2016/10/16/node/</url>
      <content type="html"><![CDATA[<h2 id="bower"><a href="#bower" class="headerlink" title="bower"></a>bower</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># npm install -g bower</div><div class="line"># sudo npm -g install bower --allow-root</div></pre></td></tr></table></figure>
<p>自定义包的安装目录<br>首先进入项目目录下，新建文件1.txt</p>
<p>然后命令行进入项目目录下，输入命令重命名该文件为.bowerrc：</p>
<p>rename 1.txt .bowerrc<br>这个.bowerrc文件是自定义bower下载的代码包的目录，比如现在我的项目结构如下图：</p>
<p>那我的.bowerrc文件内容如下：</p>
<p>{<br>  “directory” : “js/lib”<br>}<br>bower初始化<br>命令行进入项目目录中，输入命令如下：</p>
<p>bower init<br>会提示你输入一些基本信息，根据提示按回车或者空格即可，然后会生成一个bower.json文件，用来保存该项目的配置，如下：</p>
<p>{<br>  “name”: “bb_boot”,<br>  “version”: “0.0.1”,<br>  “authors”: [<br>    “savokiss <a href="&#x6d;&#97;&#x69;&#108;&#x74;&#111;&#58;&#x6a;&#97;&#121;&#x6e;&#x61;&#x72;&#x75;&#116;&#x6f;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;">&#x6a;&#97;&#121;&#x6e;&#x61;&#x72;&#x75;&#116;&#x6f;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;</a>“<br>  ],<br>  “moduleType”: [<br>    “amd”<br>  ],<br>  “license”: “MIT”,<br>  “ignore”: [<br>    “<em>*/.</em>“,<br>    “node_modules”,<br>    “bower_components”,<br>    “js/lib”,<br>    “test”,<br>    “tests”<br>  ],<br>  “dependencies”: {<br>  }<br>}</p>
<p>包的安装<br>下面终于开始安装需要的包了！<br>比如我要安装一个jquery，输入如下命令：</p>
<p>bower install jquery –save<br>然后bower就会从远程下载jquery最新版本到你的js/lib目录下<br>其中–save参数是保存配置到你的bower.json，你会发现bower.json文件已经多了一行：</p>
<p>  “dependencies”: {<br>    “jquery”: “~2.1.4”<br>  }<br>包的信息<br>比如我们想要查找jquery都有哪些个版本，输入如下命令：</p>
<p>bower info jquery<br>会看到jquery的bower.json的信息，和可用的版本信息</p>
<p>可以看到jquery最新的兼容版版本为1.11.3</p>
<p>包的更新<br>上面安装的是最新版的高版本jquery，假如想要兼容低版本浏览器的呢？<br>已经查到兼容低版本浏览器的jquery版本为1.11.3，下面直接修改bower.json文件中的jquery版本号如下：</p>
<p>  “dependencies”: {<br>    “jquery”: “~1.11.3”<br>  }<br>然后执行如下命令：</p>
<p>bower update<br>bower就会为你切换jquery的版本了</p>
<p>包的查找<br>还有一个很重要的功能，就是包的查找，比如我想要安装bootstrap的某个插件，但是记不住名字了，就可以直接在命令行输入：</p>
<p>bower search bootstrap</p>
<p>bower就会列出包含字符串bootstrap的可用包了</p>
<p>包的卸载<br>卸载包可以使用uninstall 命令：</p>
<p>bower uninstall jquery</p>
<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p><code>npm install <name></name></code>安装nodejs的依赖包<br><code>npm install <name> -g</name></code>将包安装到全局环境中<br>但是代码中，直接通过require()的方式是没有办法调用全局安装的包的。<br>全局的安装是供命令行使用的，就好像全局安装了vmarket后，就可以在命令行中直接运行vm命令</p>
<p><code>npm install <name> –save</name></code>  安装的同时，将信息写入package.json中<br>项目路径中如果有package.json文件时，直接使用npm install方法就可以根据dependencies配置安装所有的依赖包</p>
<p>这样代码提交到github时，就不用提交node_modules这个文件夹了。</p>
<p><code>npm init</code>  会引导你创建一个package.json文件，包括名称、版本、作者这些信息等</p>
<p><code>npm remove <name></name></code>移除</p>
<p><code>npm update <name></name></code>更新</p>
<p><code>npm ls</code> 列出当前安装的了所有包</p>
<p><code>npm root</code> 查看当前包的安装路径</p>
<p><code>npm root -g </code> 查看全局的包的安装路径</p>
<p><code>npm help</code>  帮助，如果要单独查看install命令的帮助，可以使用的npm help install</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux备忘录]]></title>
      <url>http://blog.ijilu.wang/pages/2016/10/16/linux/</url>
      <content type="html"><![CDATA[<p>记录时常遇到的问题</p>
<h2 id="服务自启动"><a href="#服务自启动" class="headerlink" title="服务自启动"></a>服务自启动</h2><p>服务自启动有3中方式，这里主要说明chkonfig使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ln -s       在/etc/rc.d/rc*.d目录中建立/etc/init.d/服务的软链接(*代表0～6七个运行级别之一）</div><div class="line">$ chkonfig    命令行运行级别设置</div><div class="line">$ ntsysv      伪图形运行级别设置</div></pre></td></tr></table></figure></p>
<p>chkonfig的基本命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># chkconfig --list nginx</div><div class="line">nginx           0:off   1:off   2:on    3:on    4:on    5:on    6:off</div><div class="line"># chkconfig nginx off</div><div class="line"># chkconfig --level 2345 mysql off</div></pre></td></tr></table></figure></p>
<h2 id="firewall"><a href="#firewall" class="headerlink" title="firewall"></a>firewall</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># firewall-cmd --zone=public --add-port=22/tcp --permanent      # 开放22端口</div><div class="line"># firewall-cmd --zone=public --add-port=80/tcp --permanent      # 80</div><div class="line"># firewall-cmd --permanent --zone=public --add-service=http</div><div class="line"># firewall-cmd --reload</div><div class="line"># firewall-cmd --get-active-zones</div><div class="line"># firewall-cmd --zone=public --query-port=80/tcp</div><div class="line"># firewall-cmd --zone=public --query-service=http</div><div class="line"></div><div class="line"># sudo systemctl stop firewalld.service                         # 停止firewall</div><div class="line"># sudo systemctl disable firewalld.service                      # 关闭firewall</div><div class="line"># sudo systemctl enable firewalld.service</div></pre></td></tr></table></figure>
<h2 id="配置ip地址"><a href="#配置ip地址" class="headerlink" title="配置ip地址"></a>配置ip地址</h2><p><a href="https://linux.cn/article-3977-1.html" target="_blank" rel="external">https://linux.cn/article-3977-1.html</a><br>配置ip后可能出现的问题<a href="http://www.cnblogs.com/zutbaz/p/4246523.html" target="_blank" rel="external">http://www.cnblogs.com/zutbaz/p/4246523.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vagrant备忘录]]></title>
      <url>http://blog.ijilu.wang/pages/2016/10/16/vagrant/</url>
      <content type="html"><![CDATA[<p><a href="http://vagrantup.com/" target="_blank" rel="external">Vagrant</a> 是一款用来构建虚拟开发环境的工具，可以通过 Vagrant 封装一个开发环境，分发给团队成员。成员可以在自己的桌面系统上开发程序，代码却在统一的封装好的环境里运行。“在我电脑上没问题啊！” 这种说法将成为历史。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1-安装-VirtualBox"><a href="#1-安装-VirtualBox" class="headerlink" title="1. 安装 VirtualBox"></a>1. 安装 VirtualBox</h3><p>目前虚拟环境还是要依靠虚拟机工具 VirtualBox 来搭建(免费), 当然你也可以使用 VMWare, 但是收费<br>下载地址: <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">https://www.virtualbox.org/wiki/Downloads</a></p>
<h3 id="2-安装-Vagrant"><a href="#2-安装-Vagrant" class="headerlink" title="2. 安装 Vagrant"></a>2. 安装 Vagrant</h3><p>下载地址：<a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="external">https://www.vagrantup.com/downloads.html</a> 根据提示一步步安装就行了。</p>
<h3 id="3-添加镜像"><a href="#3-添加镜像" class="headerlink" title="3. 添加镜像"></a>3. 添加镜像</h3><p>在终端执行vagrant box add {title} {url/box_file_path}添加镜像, 建议还是先从这里<a href="http://www.vagrantbox.es" target="_blank" rel="external">http://www.vagrantbox.es</a> 把box下载下来再添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mkdir &amp; cd D:/vagrant</div><div class="line">$ download vagrant-centos-6.7.box                 #在vagrantbox官网上下载box</div><div class="line">$ vagrant box add dev vagrant-centos-6.7.box      #dev为box的名字</div></pre></td></tr></table></figure></p>
<h3 id="4-初始化开发环境"><a href="#4-初始化开发环境" class="headerlink" title="4. 初始化开发环境"></a>4. 初始化开发环境</h3><p>创建开发目录(e.g: ~/www), 切换到开发目录, 使用 box 镜像初始化当前的目录:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd D:/www                 # 进入开发目录</div><div class="line">$ vagrant init dev          # 初始化名字为dev的box</div><div class="line">$ vagrant up                # 启动环境</div></pre></td></tr></table></figure></p>
<p>启动完成后，就可以用SSH登录虚拟机了(用户名@密码<code>root/vagrant@vagrant)</code>，剩下的步骤就是在虚拟机里配置运行的境和参数了<br><code>D:/www</code>目录对应虚拟机中的目录是<code>/vagrant</code><br>如果启动出现了SSH key错误信息，最方便的解决方式是在Vagrantfile中添加如下信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Vagrant.configure(&quot;2&quot;) do |config|</div><div class="line">    config.ssh.username = &quot;vagrant&quot;</div><div class="line">    config.ssh.password = &quot;vagrant&quot;</div><div class="line">    ...</div><div class="line">end</div></pre></td></tr></table></figure></p>
<h2 id="Vagrantfile配置说明"><a href="#Vagrantfile配置说明" class="headerlink" title="Vagrantfile配置说明"></a>Vagrantfile配置说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">config.vm.box = &quot;dev&quot;</div><div class="line"># box名字</div><div class="line"></div><div class="line">config.vm.network &quot;forwarded_port&quot;, guest: 80, host: 8080</div><div class="line"># 端口映射</div><div class="line"># 将虚拟机的端口映射到本地，如：本地PC的8080端口映射到虚拟机的80端口，</div><div class="line"># 这样访问本机的http://localhost:8080端口，</div><div class="line"># vagrant 会把请求转发到虚拟机的80端口去处理。</div><div class="line"></div><div class="line">config.vm.network &quot;private_network&quot;, ip: &quot;192.168.33.10&quot;</div><div class="line"># 私有网络（Private network），只能自己访问虚拟机</div><div class="line"># 用192.168.33.10访问这台机器了，也可以把IP改成其他地址，只要不产生冲突就行</div><div class="line"></div><div class="line">config.vm.network &quot;public_network&quot;, ip: &quot;192.168.1.120&quot;</div><div class="line"># 公有网络（Public network）， 可局域网访问</div><div class="line"># 这种方式方便团队开发，别人也可以访问你的虚拟机，</div><div class="line"># （你和你的虚拟机必须在同一网段中）</div><div class="line"></div><div class="line">config.vm.synced_folder &quot;D:/www&quot;, &quot;/vagrant_data&quot;</div><div class="line"># 同步目录</div><div class="line"># 自动挂载D:/www到box环境中/vagrant_data目录</div><div class="line"># 默认已经挂载D:/www到/vagrant目录</div><div class="line"></div><div class="line"></div><div class="line">config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL</div><div class="line">    apt-get update</div><div class="line">    apt-get install -y apache2</div><div class="line">SHELL</div><div class="line"># 启动脚本</div><div class="line"># 初次运行vagrant up后，虚拟机创建过程中自动运行的初始化命令。</div><div class="line"># 如果不是初次运行，同时又修改了这里的命令，想让系统再次运行这里面的命令，</div><div class="line"># 你可以使用 vagrant reload --provision 进行重载。</div><div class="line"># 所以在这种情况下，你只要将Vagrantfile共享给团队的其他成员就可以了，</div><div class="line"># 其他成员运行相同的命令即可，是不是比打包分发要方便许多。</div></pre></td></tr></table></figure>
<h2 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ vagrant up                    启动虚拟机</div><div class="line">$ vagrant halt                  关闭虚拟机</div><div class="line">$ vagrant ssh                   登录当前虚拟机，需要ssh支持，cmder可以很好的支持</div><div class="line">$ vagrant reload                修改配置文件后，重启虚拟化开发环境</div><div class="line">$ vagrant box list              查看当前可用的虚拟化开发环境</div><div class="line">$ vagrant box remove boxname    删除指定的box环境</div><div class="line">$ vagrant package               当前正在运行的VirtualBox虚拟环境打包成一个可重复使用的box</div><div class="line">$ vagrant destroy               销毁虚拟机</div><div class="line">$ vagrant status                查看虚拟机运行状态</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[phpstorm备忘录]]></title>
      <url>http://blog.ijilu.wang/pages/2016/10/15/phpstorm-note/</url>
      <content type="html"><![CDATA[<p>PhPStorm 是 JetBrains 公司开发的一款商业的 PHP 集成开发工具，PhpStorm可随时帮助用户对其编码进行调整，运行单元测试或者提供可视化debug功能。</p>
<h3 id="设置大括号和方法名在同一行显示-强迫症"><a href="#设置大括号和方法名在同一行显示-强迫症" class="headerlink" title="设置大括号和方法名在同一行显示(强迫症)"></a>设置大括号和方法名在同一行显示(强迫症)</h3><p><code>File | Settings | code style | PHP | Wrapping and Braces | Braces placement | End of line</code></p>
<h3 id="搜索忽略文件或文件夹"><a href="#搜索忽略文件或文件夹" class="headerlink" title="搜索忽略文件或文件夹"></a>搜索忽略文件或文件夹</h3><p><code>IDE Settings | File Types</code> <code>Ignore files and folders</code>中填入相关文件或文件夹名称即可</p>
<h3 id="快捷键大全"><a href="#快捷键大全" class="headerlink" title="快捷键大全"></a>快捷键大全</h3><h4 id="查询快捷键"><a href="#查询快捷键" class="headerlink" title="查询快捷键"></a>查询快捷键</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">CTRL+N              查找类</div><div class="line">CTRL+SHIFT+N        查找文件，打开工程中的文件，目的是打开当前工程下任意目录的文件</div><div class="line">CTRL+SHIFT+ALT+N    查找类中的方法或变量(JS)</div><div class="line">CIRL+B              找变量的来源，跳到变量申明处</div><div class="line">CTRL+ALT+B          找所有的子类</div><div class="line">CTRL+SHIFT+B        找变量的类</div><div class="line">CTRL+G              定位行，跳转行</div><div class="line">CTRL+F              在当前窗口查找文本</div><div class="line">CTRL+SHIFT+F        在指定路径查找文本</div><div class="line">CTRL+R              当前窗口替换文本</div><div class="line">CTRL+SHIFT+R        在指定路径替换文本</div><div class="line">ALT+SHIFT+C         查找修改的文件，最近变更历史</div><div class="line">CTRL+E              最近打开的文件</div><div class="line">F3                  查找下一个</div><div class="line">SHIFT+F3            查找上一个</div><div class="line">F4                  查找变量来源</div><div class="line">CTRL+ALT+F7         选中的字符查找工程出现的地方</div><div class="line">ALT+F7              直接查询选中的字符</div><div class="line">Ctrl+F7             文件中查询选中字符</div></pre></td></tr></table></figure>
<h4 id="自动代码"><a href="#自动代码" class="headerlink" title="自动代码"></a>自动代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ALT+回车            导入包,自动修正</div><div class="line">CTRL+ALT+L          格式化代码</div><div class="line">CTRL+ALT+I          自动缩进</div><div class="line">CTRL+ALT+O          优化导入的类和包</div><div class="line">CTRL+E              最近更改的文件/代码</div><div class="line">CTRL+SHIFT+SPACE    切换窗口</div><div class="line">CTRL+SPACE空格      代码自动完成，代码提示,一般与输入法冲突</div><div class="line">CTRL+ALT+SPACE      类 名或接口名提示（与系统冲突）</div><div class="line">CTRL+P              方法参数提示，显示默认参数</div><div class="line">CTRL+J              自动代码提示，自动补全</div><div class="line">CTRL+ALT+T          把选中的代码放在 TRY&#123;&#125; IF&#123;&#125; ELSE&#123;&#125; 里</div><div class="line">ALT+INSERT          生成代码(如GET,SET方法,构造函数等)</div></pre></td></tr></table></figure>
<h4 id="复制快捷方式"><a href="#复制快捷方式" class="headerlink" title="复制快捷方式"></a>复制快捷方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">F5                  复制文件/文件夹</div><div class="line">CTRL+C              复制</div><div class="line">CTRL+V              粘贴</div><div class="line">CTRL+X              剪切,删除行</div><div class="line">CTRL+D              复制行</div><div class="line">Ctrl + Y            删除行插入符号</div><div class="line">CTRL+SHIFT+V        可以复制多个文本</div></pre></td></tr></table></figure>
<h4 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CTRL+F              选中的文字,高亮显示 上下跳到下一个或者上一个</div><div class="line">F2（Shift+F2）      高亮错误或警告快速定位</div><div class="line">SHIFT+F2            高亮错误或警告快速定位</div><div class="line">CTRL+SHIFT+F7       高亮显示多个关键字.</div></pre></td></tr></table></figure>
<h4 id="本地历史VCS-SVN"><a href="#本地历史VCS-SVN" class="headerlink" title="本地历史VCS/SVN"></a>本地历史VCS/SVN</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Alt +反引号（&apos;）    快速弹出VCS菜单</div><div class="line">Ctrl + K            提交项目VCS</div><div class="line">Ctrl + T            更新项目从VCS</div><div class="line">Alt + Shift + C     查看最近发生的变化</div></pre></td></tr></table></figure>
<h4 id="其他快捷方式"><a href="#其他快捷方式" class="headerlink" title="其他快捷方式"></a>其他快捷方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">CTRL+Z              倒退(代码后悔)</div><div class="line">CTRL+SHIFT+Z        向前</div><div class="line">CTRL+H              显示类结构图</div><div class="line">Ctrl+F12            文件结构弹出</div><div class="line">Ctrl+Shift+H        方法的层次结构</div><div class="line">Ctrl+Alt+H          呼叫层次</div><div class="line">CTRL+Q              显示代码注释</div><div class="line">CTRL+W              选中代码，连续按会有其他效果</div><div class="line">Ctrl+Shift+W        减少当前选择到以前的状态</div><div class="line">CTRL+B              转到声明，快速打开光标处的类或方法说明注释(CTRL + 鼠标单击也可以)</div><div class="line">CTRL+O              魔术方法</div><div class="line">CTRL+/              注释//取消注释  </div><div class="line">CTRL+SHIFT+/        注释/*...*/</div><div class="line">CTRL+ []            光标移动到 &#123;&#125;[]开头或结尾位置</div><div class="line">CTRL+SHIFT+[]       选中块代码，可以快速复制</div><div class="line">ctrl + &apos;-/+&apos;:       可以折叠项目中的任何代码块</div><div class="line">ctrl + &apos;.&apos;:         折叠选中的代码的代码</div><div class="line">Ctrl+Shift+U        选中的字符大小写转换</div><div class="line">ctrl+shift+i        快速查看变量或方法定义源</div><div class="line">CTRL+ALT+F12        资源管理器打开文件夹，跳转至当前文件在磁盘上的位置</div><div class="line">ALT+F1              选择当前文件或菜单中的任何视图工具栏</div><div class="line">SHIFT+ALT+INSERT    竖编辑模式</div><div class="line">CTRL+ALT ←/→      返回上次编辑的位置</div><div class="line">ALT+ ←/→          切换代码视图，标签切换</div><div class="line">ALT+ ↑/↓          在方法间快速移动定位</div><div class="line">alt + &apos;7&apos;:          显示当前的类</div><div class="line">SHIFT+F6            重命名,重构 当前区域内变量重命名/重构</div><div class="line">ctrl+shift+enter    智能完善代码 如 if()</div><div class="line">ctrl+shift+up/down  移动行、合并选中行，代码选中区域 向上/下移动</div><div class="line">CTRL+UP/DOWN        光标跳转到编辑器显示区第一行或最后一行下</div><div class="line">ESC                 光标返回编辑框</div><div class="line">SHIFT+ESC           光标返回编辑框,关闭无用的窗口</div><div class="line">CTRL+F4             关闭当前的编辑器或选项卡</div><div class="line">Ctrl + Alt + V      引入变量</div><div class="line">Ctrl + Alt + F      类似引入变量</div><div class="line">Ctrl + Alt + C      引入常量</div><div class="line">Ctrl + Tab          键切换选项卡和工具窗口</div><div class="line">Ctrl + Shift + A    查找快捷键</div><div class="line">Alt + ＃[0-9]       打开相应的工具窗口</div><div class="line">Ctrl + Shift + F12  切换最大化编辑器</div><div class="line">Alt + Shift + F     添加到收藏夹</div><div class="line">Alt + Shift + I     检查当前文件与当前的配置文件</div><div class="line">Ctrl +反引号（`）   快速切换目前的配色/代码方案/快捷键方案/界面方案</div><div class="line">Ctrl + Alt + S      打开设置对话框（与QQ冲突）</div></pre></td></tr></table></figure>
<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Alt + Shift + F10   选择的配置和运行</div><div class="line">Alt + Shift + F9    选择配置和调试</div><div class="line">Shift + F10         运行</div><div class="line">Shift + F9          调试</div><div class="line">Ctrl + Shift + F10  运行范围内配置编辑器</div><div class="line">Ctrl + Shift + X    运行命令行</div></pre></td></tr></table></figure>
<h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">F8                  步过</div><div class="line">F7                  步入</div><div class="line">Shift + F7          智能进入</div><div class="line">Shift + F8          步骤</div><div class="line">ALT + F9            运行到光标</div><div class="line">Alt + F8            计算表达式</div><div class="line">F9                  恢复程序</div><div class="line">Ctrl + F8           切换断点</div><div class="line">Ctrl + Shift + F8   查看断点</div></pre></td></tr></table></figure>
<h4 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Shift + Esc                 键隐藏活动或最后一个激活的窗口</div><div class="line">Ctrl + Shift + F4           关闭活动运行/消息/ / ...选项卡</div><div class="line">Ctrl + Shift + Backspace    导航到最后编辑的位置</div><div class="line">Ctrl + Alt+B                到实施（S）</div><div class="line">Ctrl + Shift+I              打开快速定义查询</div><div class="line">Ctrl + U                    转到super-method/super-class</div><div class="line">Alt + Home                  组合显示导航栏</div></pre></td></tr></table></figure>
<h4 id="书签"><a href="#书签" class="headerlink" title="书签"></a>书签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Ctrl + F11          切换书签助记符</div><div class="line">Ctrl +＃[0-9]       转到编号书签</div><div class="line">Shift + F11         显示书签</div></pre></td></tr></table></figure>
<h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Ctrl + Q                快速文档查询</div><div class="line">ALT + INSERT            生成的代码...器（getter，setter方法，构造函数）</div><div class="line">Ctrl + O                覆盖方法</div><div class="line">Ctrl + I                实现方法</div><div class="line">Alt + Enter             显示意图的行动和快速修复</div><div class="line">Shift + Tab             键缩进/取消缩进选中的行</div><div class="line">Ctrl + Shift + J        智能线连接（仅适用于HTML和JavaScript）</div><div class="line">Ctrl + Enter            智能线分割（HTML和JavaScript）</div><div class="line">Shift + Enter           开始新的生产线</div><div class="line">Ctrl + Delete           删除字（word）</div><div class="line">Ctrl + Backspace        删除字开始</div><div class="line">Ctrl +小键盘+ / -       展开/折叠代码块</div><div class="line">Ctrl + Shift +小键盘+   展开全部</div><div class="line">Ctrl + Shift +数字键盘  关闭全部</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ecshop 基本用法详解]]></title>
      <url>http://blog.ijilu.wang/pages/2016/06/04/ecshop-basic-usage/</url>
      <content type="html"><![CDATA[<p>本文主要讲解<a href="http://www.ecshop.com/" target="_blank" rel="external">ecshop2.7.3</a>的基本用法以及基本注意事项，这个讲解的基本是简单的基础用法，更多请参考<a href="http://www.ecshop.com/" target="_blank" rel="external">官网文档</a>。</p>
<h2 id="兼容问题"><a href="#兼容问题" class="headerlink" title="兼容问题"></a>兼容问题</h2><p>ecshop此版本在php5.4下会有些错误，所以需要自行修改一些，主要是一些函数的错误，改后需要在后台清除缓存，不然不会马上生效，修改页面的地方主要是前后台首页。</p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">admin   后台功能</div><div class="line">    ---templates 后台模板</div><div class="line">data    上传文件、SQL备份文件、配置项</div><div class="line">    ---sqldata 数据库备份文件</div><div class="line">    ---config.php 配置文件</div><div class="line">includes 公用的类库和函数</div><div class="line">languages 语言目录</div><div class="line">    ---zh_cn</div><div class="line">    ---common.php公用语言文件</div><div class="line">themes 网站模板文件夹</div></pre></td></tr></table></figure>
<h2 id="模板制作"><a href="#模板制作" class="headerlink" title="模板制作"></a>模板制作</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>在themes 文件夹建立模板文件夹，比如：black</div><div class="line"><span class="number">2.</span>在自己的模板文件夹下面建立style.css（必须有）。</div><div class="line"><span class="number">3.</span>配置模板信息，即编辑style.css。内容为</div><div class="line"><span class="comment">/*</span></div><div class="line">Template Name: 模板名称</div><div class="line">Template URI: 模板链接地址</div><div class="line">Description: 模板的描述</div><div class="line">Version: 模板的版本号</div><div class="line">Author: 模板作者</div><div class="line">Author URI: 作者url</div><div class="line">Logo filename: images目录下logo文件名</div><div class="line">Template Type: type_0</div><div class="line">*/</div><div class="line"><span class="number">4.</span>建立images目录，存放图片</div><div class="line"><span class="number">5.</span>建立library目录存放公用html模板，例如网站头部，网站脚部。</div><div class="line"><span class="number">6.</span>在images目录存放模板预览图,文件名必须screenshot.png ，大小需为<span class="number">200</span>px*<span class="number">150</span>px</div></pre></td></tr></table></figure>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>ecshop使用的smarty模板，所以查看smarty的文档既可。下面说几个在ec中的模板标签</p>
<h3 id="insert-scripts标签"><a href="#insert-scripts标签" class="headerlink" title="insert_scripts标签"></a>insert_scripts标签</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;insert_scripts files=<span class="string">'common.js'</span>&#125;</div></pre></td></tr></table></figure>
<p>生产script js的链接标签</p>
<h3 id="insert标签"><a href="#insert标签" class="headerlink" title="insert标签"></a>insert标签</h3><p>读取动态内容，不会被缓存<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;insert name=<span class="string">'bought_notes'</span> id=$id&#125;</div></pre></td></tr></table></figure></p>
<p>调用lib_insert.php中有insert_bought_notes()函数</p>
<h2 id="商品页可用变量说明"><a href="#商品页可用变量说明" class="headerlink" title="商品页可用变量说明"></a>商品页可用变量说明</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line">$goods</div><div class="line">    <span class="string">'goods_id'</span>            =&gt; 商品id</div><div class="line">    <span class="string">'cat_id'</span>              =&gt; 商品分类id</div><div class="line">    <span class="string">'goods_sn'</span>            =&gt; 商品编号</div><div class="line">    <span class="string">'goods_name'</span>          =&gt; 商品名称</div><div class="line">    <span class="string">'goods_style_name'</span>    =&gt; 商品名称（有样式、如加粗）</div><div class="line">    <span class="string">'click_count'</span>         =&gt; 点击次数</div><div class="line">    <span class="string">'brand_id'</span>            =&gt; 品牌ID</div><div class="line">    <span class="string">'provider_name'</span>       =&gt; string <span class="string">''</span> (length=<span class="number">0</span>)</div><div class="line">    <span class="string">'goods_number'</span>        =&gt; 商品库存</div><div class="line">    <span class="string">'goods_weight'</span>        =&gt; 商品重量</div><div class="line">    <span class="string">'market_price'</span>        =&gt; 市场价格</div><div class="line">    <span class="string">'shop_price'</span>          =&gt; 本店售价</div><div class="line">    <span class="string">'shop_price_formated'</span> =&gt; 本店售价（格式化好）</div><div class="line">    <span class="string">'is_promote'</span>          =&gt; 是否促销</div><div class="line">    <span class="string">'promote_price'</span>       =&gt; 促销价格</div><div class="line">    <span class="string">'promote_start_date'</span>  =&gt; 促销开始时间</div><div class="line">    <span class="string">'promote_end_date'</span>    =&gt; 促销结束时间</div><div class="line">    <span class="string">'warn_number'</span>         =&gt; 库存警告数量</div><div class="line">    <span class="string">'keywords'</span>            =&gt; 页面关键字</div><div class="line">    <span class="string">'goods_brief'</span>         =&gt; 商品简要</div><div class="line">    <span class="string">'goods_desc'</span>          =&gt; 商品描述</div><div class="line">    <span class="string">'goods_thumb'</span>         =&gt; 商品缩略图(小)</div><div class="line">    <span class="string">'goods_img'</span>           =&gt; 商品缩略图(中)</div><div class="line">    <span class="string">'original_img'</span>        =&gt; 商品缩略图(大)</div><div class="line">    <span class="string">'is_real'</span>             =&gt; string <span class="string">'1'</span> (length=<span class="number">1</span>)</div><div class="line">    <span class="string">'extension_code'</span>      =&gt; 扩展标识(如：是否虚拟卡等[virtual_card])</div><div class="line">    <span class="string">'is_on_sale'</span>          =&gt; 是否上架（允许销售/不允许销售）</div><div class="line">    <span class="string">'is_alone_sale'</span>       =&gt; 能作为普通商品销售，否则只能作为配件或赠品销售。</div><div class="line">    <span class="string">'is_shipping'</span>         =&gt; 是否免运费</div><div class="line">    <span class="string">'integral'</span>            =&gt; 购买商品可使用积分</div><div class="line">    <span class="string">'add_time'</span>            =&gt; 添加时间</div><div class="line">    <span class="string">'sort_order'</span>          =&gt; string <span class="string">'100'</span> (length=<span class="number">3</span>)</div><div class="line">    <span class="string">'is_delete'</span>           =&gt; string <span class="string">'0'</span> (length=<span class="number">1</span>)</div><div class="line">    <span class="string">'is_best'</span>             =&gt; 是否精品</div><div class="line">    <span class="string">'is_new'</span>              =&gt; 是否新品</div><div class="line">    <span class="string">'is_hot'</span>              =&gt; 是否热销</div><div class="line">    <span class="string">'bonus_type_id'</span>       =&gt; 红利类型</div><div class="line">    <span class="string">'last_update'</span>         =&gt;上次更新时间</div><div class="line">    <span class="string">'goods_type'</span>          =&gt; 商品类型</div><div class="line">    <span class="string">'seller_note'</span>         =&gt; 商家备注（仅供商家自己看的信息）</div><div class="line">    <span class="string">'give_integral'</span>       =&gt; 购买该商品时赠送消费积分数,<span class="number">-1</span>表示按商品价格赠送</div><div class="line">    <span class="string">'rank_integral'</span>       =&gt; 购买该商品时赠送等级积分数,<span class="number">-1</span>表示按商品价格赠送</div><div class="line">    <span class="string">'suppliers_id'</span>        =&gt; 供应商ID</div><div class="line">    <span class="string">'is_check'</span>            =&gt; <span class="keyword">null</span></div><div class="line">    <span class="string">'measure_unit'</span>        =&gt; 计量单位(如：个、件、台)</div><div class="line">    <span class="string">'goods_brand'</span>         =&gt; 商品品牌</div><div class="line">    <span class="string">'bonus_money'</span>         =&gt; 红利</div><div class="line">    <span class="string">'comment_rank'</span>        =&gt; 用户评价等级</div><div class="line">    <span class="string">'rank_price'</span>          =&gt; string <span class="string">'3700'</span> (length=<span class="number">4</span>)</div><div class="line">    <span class="string">'watermark_img'</span>       =&gt; 水印图像</div><div class="line">    <span class="string">'promote_price_org'</span>   =&gt; int <span class="number">0</span></div><div class="line">    <span class="string">'gmt_end_time'</span>        =&gt; 促销结束时间</div><div class="line">    <span class="string">'goods_brand_url'</span>     =&gt; 商品品牌链接地址</div><div class="line">$id     商品ID</div><div class="line">$cfg    配置文件信息</div><div class="line">$promotion  促销信息</div><div class="line">$promotion_info 所有促销信息</div><div class="line">$promote_end_time 促销结束时间</div><div class="line">$categories 商品分类</div><div class="line">$page_title  页面标题</div><div class="line">$keywords   关键字</div><div class="line">$description    描述</div><div class="line">$prev_good  上一个商品</div><div class="line">$next_good  下一个商品</div><div class="line">$ur_here    当前位置</div><div class="line">$properties 商品属性</div><div class="line">$specification  商品规格</div><div class="line">$attribute_linked   相同属性的关联商品</div><div class="line">$related_goods  关联商品</div><div class="line">$goods_article_list 关联文章</div><div class="line">$fittings   配件</div><div class="line">$rank_prices    会员等级价格</div><div class="line">$pictures   商品相册</div><div class="line">$bought_goods   购买了该商品的用户还购买了哪些商品</div><div class="line">$goods_rank 商品的销售排名</div><div class="line">$tags       商品的标记</div><div class="line">$package_goods_list 商品的关联礼包</div><div class="line">$volume_price_list  商品价格优惠区间</div><div class="line">商品详情页读取浏览记录 &#123;insert name=<span class="string">'history'</span>&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[discuzx 基本用法与注意事项]]></title>
      <url>http://blog.ijilu.wang/pages/2016/06/02/discuzx-memo/</url>
      <content type="html"><![CDATA[<p>本文主要讲解<code>discuzx2.5</code>的基本用法以及代码分析。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[thinkphp 基本用法]]></title>
      <url>http://blog.ijilu.wang/pages/2016/03/19/thinkphp-install-usage/</url>
      <content type="html"><![CDATA[<p>本文主要讲解<a href="http://www.thinkphp.cn/down.html" target="_blank" rel="external">thinkphp3.2</a>的基本用法，你可以到官网下载thinkphp的源码，此实例的大致用法都可以在我的<a href="https://github.com/art-coder/thinkcms" target="_blank" rel="external">github</a>上找到，这个只是基本的使用，高级部分将在下章讲解</p>
<h2 id="主要配置"><a href="#主要配置" class="headerlink" title="主要配置"></a>主要配置</h2><h3 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h3><p>配置文件在运行目录模块中的Conf下的config.php中，比如<code>Application/Home/Conf/config.php</code>，下面是一个典型的配置文件情况<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</div><div class="line">    <span class="comment">//'配置项'=&gt;'配置值'</span></div><div class="line">    <span class="string">'WEB_NAME'</span> =&gt; <span class="string">'ThinkCMS'</span>,</div><div class="line">    <span class="string">'CMS_VERSION'</span> =&gt; <span class="number">0.1</span>,<span class="comment">// 版本信息</span></div><div class="line">    <span class="string">'URL_MODEL'</span> =&gt; <span class="string">'2'</span>, <span class="comment">//URL模式</span></div><div class="line">    <span class="string">'SHOW_PAGE_TRACE'</span> =&gt; <span class="keyword">true</span>,</div><div class="line">    <span class="comment">/* 数据库设置 */</span></div><div class="line">    <span class="string">'DB_TYPE'</span> =&gt; <span class="string">'mysql'</span>,     <span class="comment">// 数据库类型</span></div><div class="line">    <span class="string">'DB_HOST'</span> =&gt; <span class="string">'localhost'</span>, <span class="comment">// 服务器地址</span></div><div class="line">    <span class="string">'DB_NAME'</span> =&gt; <span class="string">'demo'</span>,          <span class="comment">// 数据库名</span></div><div class="line">    <span class="string">'DB_USER'</span> =&gt; <span class="string">'demo'</span>,      <span class="comment">// 用户名</span></div><div class="line">    <span class="string">'DB_PWD'</span> =&gt; <span class="string">'demo'</span>,          <span class="comment">// 密码</span></div><div class="line">    <span class="string">'DB_DEBUG'</span> =&gt; <span class="keyword">TRUE</span>, <span class="comment">// 数据库调试模式 开启后可以记录SQL日志</span></div><div class="line">    <span class="string">'DB_FIELDS_CACHE'</span> =&gt; <span class="keyword">true</span>,        <span class="comment">// 启用字段缓存</span></div><div class="line">    ...</div><div class="line">);</div></pre></td></tr></table></figure></p>
<h2 id="MVC基本使用"><a href="#MVC基本使用" class="headerlink" title="MVC基本使用"></a>MVC基本使用</h2><h3 id="怎样建立mvc"><a href="#怎样建立mvc" class="headerlink" title="怎样建立mvc"></a>怎样建立mvc</h3>]]></content>
    </entry>
    
  
  
</search>
